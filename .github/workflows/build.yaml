name: Test, build and package

on:
  - push

jobs:
  test:
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ./source/Frontend


    steps:
      - uses: actions/checkout@v4

      - name: Get Node.js version
        id: nodejs-version
        run: |
          VERSION=$(cat .node-version)
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"
        working-directory: .

      - name: Use Node.js ${{ steps.nodejs-version.outputs.VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ steps.nodejs-version.outputs.VERSION }}
          cache: npm
          cache-dependency-path: ./source/Frontend

      - run: npm ci
      - run: npm run lint
      - run: npm run test:unit

  docker-image:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: source/Web
            image: ghcr.io/${{ github.repository }}-web
            title: ${{ github.event.repository.name }}-web
          - dockerfile: source/Client.Console
            image: ghcr.io/${{ github.repository }}-client
            title: ${{ github.event.repository.name }}-client

    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: $
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata from build
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image }}
          # Generate Docker tags based on the following events/attributes.
          # https://github.com/docker/metadata-action#tags-input
          tags: |
            type=ref,event=branch
            # Set latest tag for the default branch.
            type=raw,value=latest,enable={{ is_default_branch }}
          labels: |
            org.opencontainers.image.title=${{ matrix.title }}

      - name: Get Node.js version
        id: nodejs-version
        run: |
          VERSION=$(cat .node-version)
          echo "VERSION=$VERSION" >> "$GITHUB_OUTPUT"

      - name: Get .NET SDK version
        id: dotnet-sdk-version
        run: |
          version="$(jq --raw-output \
                        --exit-status \
                        .sdk.version \
                        global.json)"

          printf 'VERSION=%s' "${version%.*}" >> "$GITHUB_OUTPUT"

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.dockerfile }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            NODE_VERSION=${{ steps.nodejs-version.outputs.VERSION }}
            DOTNET_SDK_VERSION=${{ steps.dotnet-sdk-version.outputs.VERSION }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
